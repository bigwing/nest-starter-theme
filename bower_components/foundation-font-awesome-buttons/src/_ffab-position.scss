// - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// Position (ffab)
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

@mixin ffab-position($position: $ffab-default-position, $size: default) {
  &::after {
    width: ffab-width($size);
  }

  @if $position == 'before' {
    padding-left: ffab-width($size);

    &::before {
      left: get-side($button-padding, left);
    }

    &::after {
      left: -#{$ffab-angle}px;
      transform: skewX(#{$ffab-angle}deg);
      transform-origin: left;
    }
  } @else if $position == 'after' {
    padding-right: ffab-width($size);

    &::before {
      right: get-side($button-padding, right);
    }

    &::after {
      right: -#{$ffab-angle}px;
      transform: skewX(-#{$ffab-angle}deg);
      transform-origin: right;
    }
  }
}

// Classes
@mixin ffab-positions {
  // Without position class
  .#{$ffab-css-prefix}:not(.before):not(.after) {
    @include ffab-position;
  }

  .#{$ffab-css-prefix}.after {
    @include ffab-position('after');
  }

  .#{$ffab-css-prefix}.before {
    @include ffab-position('before');
  }

  @each $size, $value in $button-sizes {
    @if $size != default {
      // Without position class
      .#{$ffab-css-prefix}.#{$size}:not(.before):not(.after) {
        @include ffab-position($ffab-default-position, $size);
      }

      .#{$ffab-css-prefix}.#{$size}.after {
        @include ffab-position('after', $size);
      }

      .#{$ffab-css-prefix}.#{$size}.before {
        @include ffab-position('before', $size);
      }
    }
  }
}
